Day 22 S1 A3

CarController

package com.day20session1que3.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.day20session1que3.model.Car;
import com.day20session1que3.service.CarService;

@RestController
@RequestMapping("/api/cars")
public class CarController {


   @Autowired
   private CarService carService;

   @PostMapping
   public ResponseEntity< Car> createCar(@RequestBody Car car)
   {
      return new ResponseEntity<>(carService.createCar(car),HttpStatus.OK);
   }

   @PostMapping("/assign-engine")
   public ResponseEntity<Car> assignEngineToCar(@RequestParam Long id,@RequestParam Long engineId)
   {
      return new ResponseEntity<>(carService.assignEngineToCar(id, engineId),HttpStatus.OK);
   }

   @PutMapping("/{id}")
   public ResponseEntity<Car> updateCar(@PathVariable Long id,@RequestBody Car carDetails)
   {
      return new ResponseEntity<>(carService.updateCar(id, carDetails),HttpStatus.OK);
   }

   @GetMapping("/{id}")
   public ResponseEntity< Car> getCarById(@PathVariable Long id)
   {
     return new ResponseEntity<>(carService.getCarById(id),HttpStatus.OK);
      
   }

   @GetMapping
   public List<Car> getAllCars()
   {
      return carService.getAllCars();
   }

   // Write your code here
}


EngineController


package com.day20session1que3.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.day20session1que3.model.Engine;
import com.day20session1que3.repository.EngineRepository;
import com.day20session1que3.service.EngineService;

@RestController
@RequestMapping("/api/engines")
public class EngineController {

   //Write your code here
   @Autowired
   private EngineService engineService;

   @PostMapping
   public ResponseEntity<Engine> createEngine(@RequestBody Engine engine)
   {
      return new ResponseEntity<>(engineService.createEngine(engine),HttpStatus.OK);
   }

   @PutMapping("/{id}")
   public ResponseEntity<Engine> updateEngine(@PathVariable Long id,@RequestBody Engine engineDetails)
   {
      return new ResponseEntity<>(engineService.updateEngine(id, engineDetails),HttpStatus.OK);
   }
   
   @GetMapping("/{id}")
   public ResponseEntity<Engine> getEngineById(@PathVariable Long id)
   {
      return new ResponseEntity<>(engineService.getEngineById(id),HttpStatus.OK);
   }

   @GetMapping
   public ResponseEntity<List<Engine>> getAllEngines()
   {
      return new ResponseEntity<>(engineService.getAllEngines(),HttpStatus.OK);
   }

}


MODEL CAR


package com.day20session1que3.model;

import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.Table;

@Entity
@Table(name = "car")
public class Car {
   // Write your code here

   @Id
   @GeneratedValue(strategy = GenerationType.IDENTITY)
   private Long id;

   private String model;

   @OneToOne(mappedBy = "car" , fetch = FetchType.LAZY)
   private Engine engine;

   public Car() {
   }

   public Car(Long id, String model, Engine engine) {
      this.id = id;
      this.model = model;
      this.engine = engine;
   }

   public Car(String model, Engine engine) {
      this.model = model;
      this.engine = engine;
   }

   public Long getId() {
      return id;
   }

   public void setId(Long id) {
      this.id = id;
   }

   public String getModel() {
      return model;
   }

   public void setModel(String model) {
      this.model = model;
   }

   public Engine getEngine() {
      return engine;
   }

   public void setEngine(Engine engine) {
      this.engine = engine;
   }

   @Override
   public String toString() {
      return "Car [id=" + id + ", model=" + model + ", engine=" + engine + "]";
   }

   
   

}


MODEL ENGINE

package com.day20session1que3.model;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.Table;

@Entity
@Table(name = "engine")
public class Engine {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    private String type;

    @OneToOne(cascade = CascadeType.ALL,fetch = FetchType.EAGER,optional = false)
    @JoinColumn(name = "forcar" , referencedColumnName = "id")
    private Car car;

    public Engine() {
    }

    public Engine(Long id, String type, Car car) {
        this.id = id;
        this.type = type;
        this.car = car;
    }

    public Engine(String type, Car car) {
        this.type = type;
        this.car = car;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public Car getCar() {
        return car;
    }

    public void setCar(Car car) {
        this.car = car;
    }

    @Override
    public String toString() {
        return "Engine [id=" + id + ", type=" + type + ", car=" + car + "]";
    }

    

    





    
    //Write your code here
}


CAR SERVICE

package com.day20session1que3.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.day20session1que3.exception.ResourceNotFoundException;
import com.day20session1que3.model.Car;
import com.day20session1que3.model.Engine;
import com.day20session1que3.repository.CarRepository;
import com.day20session1que3.repository.EngineRepository;

@Service

public class CarService {

   // Write your code here

   @Autowired
   private EngineRepository engineRepository;

   @Autowired
   private CarRepository carRepository;

   public Car createCar(Car car)
   {
      return carRepository.save(car);
   }

   public Car updateCar(Long id,Car carDetails)
   {
      Car exitscar=carRepository.findById(id).orElse(null);
      if(exitscar!=null)
      {
         exitscar.setModel(carDetails.getModel());
         exitscar.setEngine(carDetails.getEngine());
         carRepository.save(exitscar);
         return exitscar;
         
      }
      return null;

   }

   public Car getCarById(Long id) 
   {
      Car c=carRepository.findById(id).orElse(null);
      if(c!=null)
      {
         return c;
      }
       throw new ResourceNotFoundException();
      
   }

   public List<Car> getAllCars()
   {
      return carRepository.findAll();
   }

   public Car assignEngineToCar(Long carId,Long engineId)
   {
      Car exitcar=carRepository.findById(carId).orElse(null);
      Engine exitengine=engineRepository.findById(engineId).orElse(null);
      exitcar.setEngine(exitengine);
      return carRepository.save(exitcar);

   }
}


ENGINE SERVICE


package com.day20session1que3.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.day20session1que3.exception.ResourceNotFoundException;
import com.day20session1que3.model.Engine;
import com.day20session1que3.repository.CarRepository;
import com.day20session1que3.repository.EngineRepository;

@Service
public class EngineService {

   // Write your code here
   @Autowired
   private EngineRepository engineRepository;

   @Autowired
   private CarRepository carRepository;

   public Engine createEngine(Engine engine)
   {
      return engineRepository.save(engine);
   }

   public Engine getEngineById(Long id)
   {

      Engine e=engineRepository.findById(id).orElse(null);
      if(e!=null)
      {
         return e;
      }
      throw new ResourceNotFoundException();
   }

   public List<Engine> getAllEngines()
   {
      return engineRepository.findAll();
      
   }

   public Engine updateEngine(Long id,Engine engineDetails)
   {
      Engine s=engineRepository.findById(id).orElse(null);
      if(s!=null)
      {
         s.setType(engineDetails.getType());
         s.setCar(engineDetails.getCar());
         engineRepository.save(s);
         return s;
      }
      return s;
      
   }

}


public class ResourceNotFoundException extends RuntimeException
{
   
   // Write your code here
}
